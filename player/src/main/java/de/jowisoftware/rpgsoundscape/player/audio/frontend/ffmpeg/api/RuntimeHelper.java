package de.jowisoftware.rpgsoundscape.player.audio.frontend.ffmpeg.api;
// Generated by jextract

import jdk.incubator.foreign.CLinker;
import jdk.incubator.foreign.FunctionDescriptor;
import jdk.incubator.foreign.LibraryLookup;
import jdk.incubator.foreign.MemorySegment;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodType;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

final class RuntimeHelper {
    private RuntimeHelper() {
    }

    private static final Map<String, LibraryLookup> LIBRARIES = new ConcurrentHashMap<>();

    private static final CLinker LINKER = CLinker.getInstance();
    private static final ClassLoader LOADER = RuntimeHelper.class.getClassLoader();

    static MethodHandle downcallHandle(String libName, String name, String desc, FunctionDescriptor fdesc) {
        return LIBRARIES
                .computeIfAbsent(libName, LibraryLookup::ofLibrary)
                .lookup(name)
                .map(addr -> {
                    MethodType mt = MethodType.fromMethodDescriptorString(desc, LOADER);
                    return LINKER.downcallHandle(addr, mt, fdesc);
                })
                .orElseThrow(() -> new UnsatisfiedLinkError(name));
    }

    static MemorySegment nonCloseableNonTransferableSegment(MemorySegment seg) {
        return seg.withAccessModes(seg.accessModes() & ~MemorySegment.CLOSE & ~MemorySegment.HANDOFF);
    }
}
